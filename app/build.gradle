apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
if (!Boolean.valueOf(LOCAL_TEST)) {
    apply plugin: "com.github.richardwrq.krouter"
} else {
    kapt {
        arguments {
            arg("moduleName", project.getName())
        }
    }
}

android {
    compileSdkVersion versions.compileSdk
    defaultConfig {
        applicationId "com.github.richardwrq.krouter"
        minSdkVersion versions.minSdk
        targetSdkVersion versions.compileSdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_7
        targetCompatibility = JavaVersion.VERSION_1_7
    }

    sourceSets {
        debug {
            assets.srcDirs = ['src/debug/assets']
        }
        release {
            assets.srcDirs = ['src/release/assets']
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation deps.support.appcompat.v7
    implementation deps.support.constraint
    testImplementation deps.junit
    androidTestImplementation deps.support.test.runner
    androidTestImplementation deps.support.test.espresso.core
    implementation deps.kotlin.stdLibJre8
    implementation deps.gson
    implementation project(':module-java')
    implementation project(':common')
    if (Boolean.valueOf(LOCAL_TEST)) {
        implementation project(':krouter-api')
        implementation project(':krouter-annotation')
        kapt project(':krouter-compiler')
    } else {
        kapt deps.krouter.compiler
        implementation deps.krouter.api
    }
}